.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_example_plot.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_example_plot.py:


.. _example_plot:

===================================
Show basic plot in slam
===================================


.. code-block:: default


    # Authors: Guillaume Auzias <guillaume.auzias@univ-amu.fr>

    # License: BSD (3-clause)
    # sphinx_gallery_thumbnail_number = 2









This script shows examples of visualization in SLAM.
The visu is based on visbrain: https://github.com/EtienneCmb/visbrain


.. code-block:: default


    import slam.plot as splt
    import slam.io as sio
    import numpy as np

    # loading an examplar mesh and corresponding texture
    mesh_file = '../examples/data/example_mesh.gii'
    texture_file = '../examples/data/example_texture.gii'
    mesh = sio.load_mesh(mesh_file)
    tex = sio.load_texture(texture_file)








here is the range of values in the texture:


.. code-block:: default

    print('[{a:2.3f}, {b:2.3f}]'.format(a=tex.min(), b=tex.max()))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [-0.052, 0.071]




make the figure


.. code-block:: default

    visb_sc = splt.visbrain_plot(mesh=mesh, caption='simple mesh')
    visb_sc = splt.visbrain_plot(mesh=mesh, tex=tex.darray[0],
                                 caption='with curvature',
                                 cblabel='curvature', visb_sc=visb_sc)
    visb_sc = splt.visbrain_plot(mesh=mesh, tex=tex.darray[0],
                                 caption='change cmap', cblabel='curvature',
                                 cmap='hot', visb_sc=visb_sc)
    visb_sc.preview()
    # then save the 3D rendering figure
    # visb_sc.screenshot('test.png')
    # # most simple mesh visualization
    # splt.pyglet_plot(mesh)
    # # with a texture
    # splt.pyglet_plot(mesh, tex.darray[0], plot_colormap=True)
    # # change in colormap
    # splt.pyglet_plot(mesh, tex.darray[0], color_map=plt.get_cmap('hot', 6),
    #                  plot_colormap=True)
    # # to save to disc as png, we need to get the output of the plot function
    # plot_output = splt.pyglet_plot(mesh, tex.darray[0],
    #                                color_map=plt.get_cmap('hot'),
    #                                plot_colormap=True)
    # # then save the 3D rendering figure
    # # splt.save_image(plot_output[0], png_fig_filename)
    # # and eventually the colobar
    # # plot_output[1].savefig(colormap_png_filename)
    #
    # # trimesh rendering possibilities
    # """ set each facet to a random color
    # colors are 8 bit RGBA by default (n,4) np.uint8
    # for facet in mesh.facets:
    #     mesh.visual.face_colors[facet] = trimesh.visual.random_color()
    # """
    # for vert_ind in range(len(mesh.visual.vertex_colors)):
    #     mesh.visual.vertex_colors[vert_ind] = trimesh.visual.random_color()
    #
    # # default visualization from trimesh
    # mesh.show()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    BrainObj(name='gui') created
    Creation of a scene
        BrainObj(name='gui') added to the scene
    BrainObj(name='gui') created
        BrainObj(name='gui') added to the scene
    [1m[1;33mWARNING[0m | Data defined on a dense grid; ignore smoothing.
        Add data to specific vertices.
        Data scaled between (-0.052, 0.071)
    Get colorbar properties from BrainObj(name='gui') object
    ColorbarObj(name='guiCbar') created
        ColorbarObj(name='guiCbar') added to the scene
    BrainObj(name='gui') created
        BrainObj(name='gui') added to the scene
    [1m[1;33mWARNING[0m | Data defined on a dense grid; ignore smoothing.
        Add data to specific vertices.
        Data scaled between (-0.052, 0.071)
    Get colorbar properties from BrainObj(name='gui') object
    ColorbarObj(name='guiCbar') created
        ColorbarObj(name='guiCbar') added to the scene





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.852 seconds)


.. _sphx_glr_download_auto_examples_example_plot.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_plot.py <example_plot.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_plot.ipynb <example_plot.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
